---
# yaml-language-server: $schema=https://raw.githubusercontent.com/siderolabs/talos/refs/heads/release-1.10/website/content/v1.10/schemas/config.schema.json
version: v1alpha1
machine:
  type: controlplane
  token: vault://infra/techtales/talos/kube-lab/MACHINE_TOKEN
  ca:
    crt: vault://infra/techtales/talos/kube-lab/MACHINE_CA_CRT
    key: vault://infra/techtales/talos/kube-lab/MACHINE_CA_KEY
  features:
    rbac: true
    stableHostname: true
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles:
        - os:admin
      allowedKubernetesNamespaces:
        - system-upgrade
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
      enabled: true
      port: 7445
    hostDNS:
      enabled: true
      resolveMemberNames: true
      forwardKubeDNSToHost: false
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      permissions: 0
      content: |
        [plugins."io.containerd.grpc.v1.cri"]
          enable_unprivileged_ports = true
          enable_unprivileged_icmp = true
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.grpc.v1.cri"]
          device_ownership_from_security_context = true
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.2
        hard=True
        nconnect=8
        noatime=True
        rsize=1048576
        wsize=1048576
  install:
    image: factory.talos.dev/installer/{{ ENV.TALOS_SCHEMATIC }}:{{ ENV.TALOS_VERSION }}
  kernel:
    modules:
      - name: nbd
      - name: thunderbolt
      - name: thunderbolt_net
  kubelet:
    image: ghcr.io/siderolabs/kubelet:{{ ENV.KUBERNETES_VERSION }}
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
    extraArgs:
      # max-pods: "200"
      rotate-server-certificates: "true"
    extraConfig:
      allowedUnsafeSysctls:
        - net.ipv6.conf.net1.* # IPv6 syscalls for Matter/Thread
      serializeImagePulls: false
    extraMounts:
      - destination: /var/openebs/local
        type: bind
        source: /var/openebs/local
        options: ["bind", "rshared", "rw"]
    nodeIP:
      validSubnets: ["10.69.1.0/24", "10.69.2.0/24"]
  network:
    interfaces:
      - # 2.5G ignore for WoL/vPro
        deviceSelector:
          hardwareAddr: 58:47:ca:7d:*
          driver: igc
        ignore: true
      - # 10G
        interface: bond0
        bond:
          deviceSelectors: [{ hardwareAddr: "58:47:ca:7d:*", driver: i40e }]
          mode: active-backup
        mtu: 9000
        dhcp: true
        vlans:
          - { vlanId: 10, dhcp: false, mtu: 9000 } ## IoT
          - { vlanId: 70, dhcp: false, mtu: 9000 } ## L2 LB
    nameservers:
      - 1.1.1.1
      - 8.8.8.8
      - 192.168.1.1
    disableSearchDomain: true
  nodeLabels:
    topology.kubernetes.io/region: k8s
  sysctls:
    fs.inotify.max_user_watches: "1048576" # Watchdog
    fs.inotify.max_user_instances: "8192" # Watchdog
    fs.inotify.max_queued_events: "65536" # Watchdog
    net.core.default_qdisc: fq # 10Gb/s
    net.core.rmem_max: "67108864" # 10Gb/s | Cloudflared / QUIC
    net.core.wmem_max: "67108864" # 10Gb/s | Cloudflared / QUIC
    net.ipv4.neigh.default.gc_thresh1: "4096" # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh2: "8192" # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh3: "16384" # Prevent ARP cache overflows
    net.ipv4.tcp_congestion_control: bbr # 10Gb/s
    net.ipv4.tcp_fastopen: "3" # Send and accept data in the opening SYN packet
    net.ipv4.tcp_mtu_probing: "1" # 10Gb/s | Jumbo frames
    net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
    net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
    net.ipv4.tcp_window_scaling: "1" # 10Gb/s
    sunrpc.tcp_slot_table_entries: "128" # 10Gb/s | NFS
    sunrpc.tcp_max_slot_table_entries: "128" # 10Gb/s | NFS
    user.max_user_namespaces: "11255" # User Namespaces
    vm.nr_hugepages: "1024" # PostgreSQL
  time:
    disabled: false
    servers:
      - 192.168.100.1
      - time.cloudflare.com
  registries:
    mirrors:
      docker.io:
        endpoints:
          - https://harbor.techtales.io/v2/proxy-docker.io
        overridePath: true
      ghcr.io:
        endpoints:
          - https://harbor.techtales.io/v2/proxy-ghcr.io
        overridePath: true
cluster:
  ca:
    crt: vault://infra/techtales/talos/kube-lab/CLUSTER_CA_CRT
    key: vault://infra/techtales/talos/kube-lab/CLUSTER_CA_KEY
  clusterName: kube-lab
  controlPlane:
    endpoint: https://192.168.100.100:6443
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: true
      service:
        disabled: false
  id: vault://infra/techtales/talos/kube-lab/CLUSTER_ID
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.42.0.0/16
    serviceSubnets:
      - 10.43.0.0/16
  secret: vault://infra/techtales/talos/kube-lab/CLUSTER_SECRET
  token: vault://infra/techtales/talos/kube-lab/CLUSTER_TOKEN
  aggregatorCA:
    crt: vault://infra/techtales/talos/kube-lab/CLUSTER_AGGREGATORCA_CRT
    key: vault://infra/techtales/talos/kube-lab/CLUSTER_AGGREGATORCA_KEY
  allowSchedulingOnControlPlanes: true
  apiServer:
    image: registry.k8s.io/kube-apiserver:{{ ENV.KUBERNETES_VERSION }}
    certSANs:
      - 192.168.100.100
    disablePodSecurityPolicy: true
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      bind-address: 0.0.0.0
  coreDNS:
    disabled: true
  etcd:
    advertisedSubnets: ["10.69.1.0/24"]
    ca:
      crt: vault://infra/techtales/talos/kube-lab/CLUSTER_ETCD_CA_CRT
      key: vault://infra/techtales/talos/kube-lab/CLUSTER_ETCD_CA_KEY
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:{{ ENV.KUBERNETES_VERSION }}
  secretboxEncryptionSecret: vault://infra/techtales/talos/kube-lab/CLUSTER_SECRETBOXENCRYPTIONSECRET
  scheduler:
    image: registry.k8s.io/kube-scheduler:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      bind-address: 0.0.0.0
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled:
                - name: ImageLocality
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
  serviceAccount:
    key: vault://infra/techtales/talos/kube-lab/CLUSTER_SERVICEACCOUNT_KEY
# ---
# apiVersion: v1alpha1
# kind: EthernetConfig
# name: enp2s0f0np0
# rings:
#   rx: 8160
#   tx: 8160
# ---
# apiVersion: v1alpha1
# kind: EthernetConfig
# name: enp2s0f1np1
# rings:
#   rx: 8160
#   tx: 8160
