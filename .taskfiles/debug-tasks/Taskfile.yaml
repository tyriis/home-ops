---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
# Thank you Truxnell and Onedr0p for all the stuff you share with the k8s-at-home community!
version: "3"

tasks:
  network:
    desc: Create a netshoot container for debugging
    cmds:
      - kubectl run netshoot --rm -i --tty --image ghcr.io/nicolaka/netshoot:latest {{.CLI_ARGS}}

  volume:
    desc: |-
      Create a container for debugging a PVC (ex. task PVC=plex-config-v1 debug:volume)
    interactive: true
    cmds:
      - |
        kubectl run -n $(kubectl get pvc -A | grep {{.PVC}} | awk '{print $1}') debug-{{.PVC}} -i --tty --rm --image=null --privileged --overrides='
          {
            "apiVersion": "v1",
            "spec": {
              "containers": [
                {
                  "name": "debug",
                  "image": "ghcr.io/onedr0p/alpine:rolling",
                  "command": [
                    "/bin/bash"
                  ],
                  "stdin": true,
                  "stdinOnce": true,
                  "tty": true,
                  "volumeMounts": [
                    {
                      "name": "config",
                      "mountPath": "/data/config"
                    }
                  ]
                }
              ],
              "volumes": [
                {
                  "name": "config",
                  "persistentVolumeClaim": {
                    "claimName": "{{.PVC}}"
                  }
                }
              ],
              "restartPolicy": "Never"
            }
          }'

  node:
    desc: |-
      Create a privileged container on a node for debugging (ex. task NODE=k8s-0 debug:node)
    interactive: true
    cmds:
      - |
        kubectl run debug-{{.NODE}} -i --tty --rm --image="docker.io/library/alpine:3.16" --privileged --overrides='
          {
            "spec": {
              "nodeSelector": {
                "kubernetes.io/hostname": "{{.NODE}}"
              },
              "restartPolicy": "Never"
            }
          }'

  privileged:
    desc: Run a privileged pod
    cmds:
      - kubectl label --overwrite namespace default pod-security.kubernetes.io/enforce=privileged
      - |
        kubectl run privileged-{{.node}} -i --rm --image=null -n default \
          --overrides="$(yq {{.ROOT_DIR}}/.taskfiles/debug-tasks/privileged-pod.tmpl.yaml -o=json | envsubst)"
    env:
      node: "{{.node}}"
    preconditions:
      - test -f {{.ROOT_DIR}}/.taskfiles/debug-tasks/privileged-pod.tmpl.yaml
