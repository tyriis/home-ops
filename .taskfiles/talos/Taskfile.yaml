---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  setup:
    - task: config
    - task: kubeconfig

  init:
    desc: Initialize talos configuration
    dir: "{{.TALOS_DIR}}"
    cmds:
      # https://github.com/budimanjojo/talhelper
      - "talhelper gensecret > talsecret.sops.yaml"
      - "sops -e -i talsecret.sops.yaml"

  config:
    desc: Let talhelper generate the configuration files
    dir: "{{.TALOS_DIR}}"
    cmds:
      - "talhelper genconfig"

  install:talos01:
    desc: Install talos01
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl apply-config --insecure \
          --nodes 192.168.100.101 \
          --file clusterconfig/talos-flux-talos01.yaml

  install:talos02:
    desc: Install talos02
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl apply-config --insecure \
          --nodes 192.168.100.102 \
          --file clusterconfig/talos-flux-talos02.yaml

  install:talos03:
    desc: Install talos03
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl apply-config --insecure \
          --nodes 192.168.100.103 \
          --file clusterconfig/talos-flux-talos03.yaml

  update:talos01:
    desc: Update talos01
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl apply-config \
          --nodes 192.168.100.101 \
          --file clusterconfig/talos-flux-talos01.yaml

  update:talos02:
    desc: Update talos02
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl apply-config \
          --nodes 192.168.100.102 \
          --file clusterconfig/talos-flux-talos02.yaml

  update:talos03:
    desc: Update talos03
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl apply-config \
          --nodes 192.168.100.103 \
          --file clusterconfig/talos-flux-talos03.yaml

  bootstrap:
    desc: Bootstrap talos etcd on 1st node
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl bootstrap \
          --talosconfig=clusterconfig/talosconfig \
          --nodes 192.168.100.101

  kubeconfig:
    desc: write kube config
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl kubeconfig \
          --talosconfig=clusterconfig/talosconfig \
          --nodes 192.168.100.100 \
          --endpoints 192.168.100.100 \
          --force

  # dashboard:
  #   desc: start the theila dashboard
  #   cmds:
  #     - theila --address 127.0.0.1 --port 8080

  # https://www.talos.dev/v1.2/advanced/disaster-recovery/
  backup:etcd:
    desc: backup etcd from ip 192.168.100.101
    cmds:
      - talosctl -n 192.168.100.101 etcd snapshot db.snapshot

  dashboard:
    desc: Dashboard talos01
    dir: "{{.TALOS_DIR}}"
    cmds:
      - talosctl dashboard --nodes {{.hostname}}
    requires:
      vars:
        - hostname

  dashboard:talos01:
    desc: Dashboard talos01
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl dashboard \
          --nodes 192.168.100.101

  dashboard:talos02:
    desc: Dashboard talos02
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl dashboard \
          --nodes 192.168.100.102

  dashboard:talos03:
    desc: Dashboard talos03
    dir: "{{.TALOS_DIR}}"
    cmds:
      - |
        talosctl dashboard \
          --nodes 192.168.100.103

  upgrade:
    # usage: task talos:upgrade hostname=192.168.100.101 cluster=talos-flux
    desc: Upgrade talos on a node
    dir: "{{.TALOS_DIR}}"
    prompt: do you want to upgrade talos to {{.TALOS_VERSION}} on node {{.hostname}}?
    cmds:
      - until kubectl --context {{.KUBE_CONTEXT}} wait --timeout=5m --for=condition=Complete jobs --all --all-namespaces; do sleep 10; done
      - talosctl --context {{.cluster}} --nodes {{.hostname}} upgrade --image="ghcr.io/siderolabs/installer:{{.TALOS_VERSION}}" --wait=true --timeout=10m --preserve=true
      - talosctl --context {{.cluster}} --nodes {{.hostname}} health --wait-timeout=10m --server=false
      - until kubectl --context {{.KUBE_CONTEXT}} wait --timeout=5m --for=jsonpath=.status.ceph.health=HEALTH_OK cephcluster --all --all-namespaces; do sleep 10; done
    vars:
      TALOS_VERSION:
        sh: yq 'select(document_index == 0).talosVersion' {{.TALOS_DIR}}/talconfig.yaml
      KUBERNETES_VERSION:
        sh: yq 'select(document_index == 0).kubernetesVersion' {{.TALOS_DIR}}/talconfig.yaml
      # CONTROLLER:
      #   sh: talosctl --context {{.cluster}} config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
      KUBE_CONTEXT:
        sh: echo admin@{{.cluster}}
    requires:
      vars:
        - cluster
        - hostname
    preconditions:
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - talosctl --context {{.cluster}} config info >/dev/null 2>&1
      - talosctl --context {{.cluster}} --nodes {{.hostname}} get machineconfig >/dev/null 2>&1

  kubelet:upgrade:
    # usage: task talos:kubelet:upgrade hostname=talos01 ip=192.168.100.101 cluster=talos-flux
    desc: Upgrade kubelet on a node
    dir: "{{.TALOS_DIR}}"
    prompt: do you want to upgrade kubelet to {{.KUBERNETES_VERSION}} on node {{.hostname}}?
    cmds:
      - task: config
      - until kubectl --context {{.KUBE_CONTEXT}} wait --timeout=5m --for=jsonpath=.status.ceph.health=HEALTH_OK cephcluster --all --all-namespaces; do sleep 10; done
      - talosctl apply --nodes {{.ip }} --file clusterconfig/talos-flux-{{.hostname }}.yaml
      - talosctl --context {{.cluster}} --nodes {{.ip}} health --wait-timeout=10m --server=false
      - until kubectl --context {{.KUBE_CONTEXT}} wait --timeout=5m --for=jsonpath=.status.ceph.health=HEALTH_OK cephcluster --all --all-namespaces; do sleep 10; done
    vars:
      KUBE_CONTEXT:
        sh: echo admin@{{.cluster}}
      KUBERNETES_VERSION:
        sh: yq 'select(document_index == 0).kubernetesVersion' {{.TALOS_DIR}}/talconfig.yaml
    requires:
      vars:
        - cluster
        - hostname
        - ip
    preconditions:
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - talosctl --context {{.cluster}} config info >/dev/null 2>&1
      - talosctl --context {{.cluster}} --nodes {{.ip}} get machineconfig >/dev/null 2>&1
