---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app zigbee2mqtt-upstairs
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: false
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      main:
        replicas: 1
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            nameOverride: *app
            env:
              ZIGBEE2MQTT_DATA: /config
              TZ: ${SETTING_TZ}
            image:
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 1.34.0
            ports:
              - name: http
                containerPort: 8080
                protocol: TCP
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
          zigbee2mqtt-exporter:
            env:
              ZIGBEE2MQTT_WS: ws://127.0.0.1:8080/api
              TZ: ${SETTING_TZ}
            image:
              repository: ghcr.io/tyriis/zigbee2mqtt-exporter
              tag: v0.2.7
            ports:
              - name: http-prom
                containerPort: 3000
                protocol: TCP
    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-sso@kubernetescrd
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/affinity: "true"
          traefik.ingress.kubernetes.io/router.tls: "true"
          hajimari.io/appName: *app
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:zigbee
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"

    persistence:
      config:
        enabled: true
        existingClaim: zigbee2mqtt-upstairs-data
        advancedMounts:
          main:
            main:
              - path: /config
