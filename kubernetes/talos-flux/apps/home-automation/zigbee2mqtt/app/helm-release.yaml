---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app zigbee2mqtt
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: false
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      zigbee2mqtt:
        pod:
          nodeSelector:
            zigbee.feature.node.kubernetes.io/slae.sh: "true"
        replicas: 1
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            nameOverride: *app
            # required to open USB device
            securityContext:
              privileged: true
            # envFrom:
            #   - secretRef:
            #       name: zigbee2mqtt-env
            env:
              TZ: ${SETTING_TZ}
              ZIGBEE2MQTT_DATA: /config
              # ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_DISCOVERY_TOPIC: homeassistant
              ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_LEGACY_ENTITY_ATTRIBUTES: "true"
              ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_LEGACY_TRIGGERS: "true"
              # ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_STATUS_TOPIC: homeassistant/status
              ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN: ISO_8601
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_API: "false"
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_AVAILABILITY_PAYLOAD: "false"
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: info # debug
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT: '["console"]'
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_ACTIVE_TIMEOUT: 60
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_PASSIVE_TIMEOUT: 2000
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_LEGACY: "false"
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_RETAIN: "true"
              ZIGBEE2MQTT_CONFIG_EXPERIMENTAL_NEW_API: "true"
              ZIGBEE2MQTT_CONFIG_FRONTEND_PORT: &port 8080
              ZIGBEE2MQTT_CONFIG_FRONTEND_HOST: 0.0.0.0
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: https://zigbee2mqtt.techtales.io
              # ZIGBEE2MQTT_CONFIG_HOMEASSISTANT: "true"
              ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION: "true"
              ZIGBEE2MQTT_CONFIG_MQTT_KEEPALIVE: 60
              ZIGBEE2MQTT_CONFIG_MQTT_REJECT_UNAUTHORIZED: "true"
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtt://mqtt.home
              # ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 5
              ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: "false"
              # ZIGBEE2MQTT_CONFIG_SERIAL_BAUDRATE: 115200
              # ZIGBEE2MQTT_CONFIG_SERIAL_DISABLE_LED: "false"
              # ZIGBEE2MQTT_CONFIG_SERIAL_PORT: tcp://192.168.1.90:6638
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: zstack
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: /dev/ttyUSB0
            image:
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 2.1.3@sha256:80f82f8fed251acb706a002c51fffab166b25bb18b1aff15f37f85cf3d73c171
            ports:
              - name: http
                containerPort: 8080
                protocol: TCP
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true

          zigbee2mqtt-exporter:
            env:
              ZIGBEE2MQTT_WS: ws://127.0.0.1:8080/api
              TZ: ${SETTING_TZ}
            image:
              repository: ghcr.io/tyriis/zigbee2mqtt-exporter
              tag: v0.2.7@sha256:27563503a27da9a4e64c2a5fd2f75967af95b8e54452d576a20364efa56c8321
            ports:
              - name: http-prom
                containerPort: 3000
                protocol: TCP
    service:
      app:
        controller: zigbee2mqtt
        ports:
          http:
            port: 8080

    serviceMonitor:
      app:
        serviceName: zigbee2mqtt
        endpoints:
          - port: http-prom
            scheme: http
            path: /metrics
            interval: 5m
            scrapeTimeout: 15s

    ingress:
      app:
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-sso@kubernetescrd
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/affinity: "true"
          traefik.ingress.kubernetes.io/router.tls: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Get rid of your proprietary Zigbee bridges
          gethomepage.dev/group: Home Automation
          gethomepage.dev/icon: zigbee2mqtt
          gethomepage.dev/name: Zigbee2MQTT
          gethomepage.dev/weight: "5" # optional
        hosts:
          - host: &host "{{ .Release.Name }}.techtales.io"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"

    persistence:
      config:
        existingClaim: zigbee2mqtt-data
        advancedMounts:
          zigbee2mqtt:
            app:
              - path: /config
      usb:
        enabled: true
        type: hostPath
        hostPathType: CharDevice
        hostPath: /dev/serial/by-id/usb-Silicon_Labs_slae.sh_cc2652rb_stick_-_slaesh_s_iot_stuff_00_12_4B_00_21_4F_24_18-if00-port0
        advancedMounts:
          zigbee2mqtt:
            app:
              - path: /dev/ttyUSB0
