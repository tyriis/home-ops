---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ring-mqtt
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 15
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      ring-mqtt:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          copy-config:
            image:
              repository: busybox
              tag: 1.37.0@sha256:498a000f370d8c37927118ed80afe8adc38d1edcbfc071627d17b25c88efcab0
            command:
              - sh
              - -c
              - |
                if [ ! -f /data/config.json ]; then
                  cp /config/config.json /data/config.json
                fi
                if [ ! -f /data/ring-state.json ]; then
                  cp /config/ring-state.json /data/ring-state.json
                fi
        containers:
          app:
            env:
              TZ: ${SETTING_TZ}
              S6_READ_ONLY_ROOT: "true"
            image:
              repository: tsightler/ring-mqtt
              tag: 5.8.0@sha256:43717ab265a9c97dbb1fc029bfcbc8925e82a0f6bc2b28280dfd673c7f902541
            ports:
              - name: rtsp
                containerPort: &port 8554
                protocol: TCP
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }
        # pod:
        #   securityContext:
        #     runAsUser: 65534
        #     runAsGroup: 65534
        #     runAsNonRoot: true

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    # ingress:
    #   app:
    #     enabled: true
    #     className: traefik
    #     annotations:
    #       cert-manager.io/cluster-issuer: letsencrypt-production
    #       traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-sso@kubernetescrd
    #       traefik.ingress.kubernetes.io/router.entrypoints: websecure
    #       traefik.ingress.kubernetes.io/affinity: "true"
    #       traefik.ingress.kubernetes.io/router.tls: "true"
    #       gethomepage.dev/enabled: "true"
    #       gethomepage.dev/description: Govee to MQTT bridge for Home Assistant
    #       gethomepage.dev/group: Home Automation
    #       gethomepage.dev/icon: mqtt
    #       gethomepage.dev/name: ring-mqtt
    #       gethomepage.dev/weight: "3" # optional
    #     hosts:
    #       - host: &host ring-mqtt.techtales.io
    #         paths:
    #           - path: /
    #             service:
    #               identifier: app
    #               port: rtsp
    #     tls:
    #       - hosts:
    #           - *host
    #         secretName: ring-mqtt-tls

    persistence:
      data:
        existingClaim: ring-mqtt-data
        globalMounts:
          - path: /data
      credentials:
        type: secret
        name: ring-mqtt-config
        advancedMounts:
          ring-mqtt:
            copy-config:
              - path: /config/config.json
                subPath: config.json
                readOnly: true
              - path: /config/ring-state.json
                subPath: ring-state.json
                readOnly: true
