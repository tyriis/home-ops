---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app node-red
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 15
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      node-red:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: docker.io/nodered/node-red
              tag: 4.0.8@sha256:871225abb46d62e434c75c73ec264c406ae1d0ea09b365ed9ffa122fdc327879
            env:
              TZ: ${SETTING_TZ}
              FLOWS: flows.json
              NODE_RED_ENABLE_PROJECTS: "true"
              NODE_RED_ENABLE_SAFE_MODE: "false"
            resources:
              requests:
                memory: 247Mi
                cpu: 20m
              limits:
                memory: 247Mi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true

    service:
      app:
        controller: *app
        ports:
          http:
            port: 1880

    ingress:
      app:
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          kubernetes.io/tls-acme: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/affinity: "true"
          traefik.ingress.kubernetes.io/router.tls: "true"
          external-dns/opnsense: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: resistor-nodes
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Low-code programming for event-driven applications
          gethomepage.dev/group: Home Automation
          gethomepage.dev/icon: node-red
          gethomepage.dev/name: Node-RED
          gethomepage.dev/weight: "2" # optional
        hosts:
          - host: &host "{{ .Release.Name }}.techtales.io"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"

    persistence:
      data:
        existingClaim: node-red-data
        advancedMounts:
          node-red:
            app:
              - path: /data
      gitconfig:
        type: configMap
        name: node-red-gitconfig
        globalMounts:
          - path: /usr/src/node-red/.gitconfig
            subPath: .gitconfig
