---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app n8n
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      n8n:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: 1.97.0@sha256:e07088dbf3c1f0cdfbe67beff92399746706e6921be54a88119eae1713a4ff50
            envFrom:
              - secretRef:
                  name: n8n-env
            env:
              DB_SQLITE_VACUUM_ON_STARTUP: true
              EXECUTIONS_DATA_PRUNE: true
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
              GENERIC_TIMEZONE: "Europe/Vienna"
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_PROTOCOL: "https"
              N8N_PORT: &port 8080
              N8N_HOST: &hostName n8n.techtales.io
              N8N_LOG_LEVEL: info
              N8N_LOG_OUTPUT: console
              N8N_RUNNERS_ENABLED: "true"
              WEBHOOK_URL: https://n8n-webhook.techtales.io/

            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 2Gi

    service:
      app:
        controller: n8n
        ports:
          http:
            port: *port

    persistence:
      data:
        existingClaim: n8n-data
        advancedMounts:
          n8n:
            app:
              - path: /home/node/.n8n

    ingress:
      app:
        forceRename: n8n
        enabled: true
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Flexible AI workflow automation
          gethomepage.dev/group: Home Automation
          gethomepage.dev/icon: *app
          gethomepage.dev/name: *app
          gethomepage.dev/weight: "1" # optional
        hosts:
          - host: &host n8n.techtales.io
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: n8n-tls

      webhook:
        enabled: true
        className: traefik
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/affinity: "true"
          traefik.ingress.kubernetes.io/router.tls: "true"
          external-dns.alpha.kubernetes.io/target: external.techtales.io
          external-dns/cloudflare: "true"
        hosts:
          - host: &webhookHost n8n-webhook.techtales.io
            paths:
              - path: /webhook
                service:
                  identifier: app
                  port: http
              - path: /webhook-test
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *webhookHost
            secretName: n8n-webhook-tls
