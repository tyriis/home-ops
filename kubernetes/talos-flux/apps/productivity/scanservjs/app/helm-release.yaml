---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app scanservjs
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  # https://github.com/sbs20/scanservjs
  values:
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            nameOverride: *app
            env:
              TZ: ${SETTING_TZ}
              AIRSCAN_DEVICES: '"HP" = "http://${SECRET_SCANNER_IP}/eSCL";"LASER" = "http://${SECRET_SCANNER2_IP}/eSCL"'
            image:
              repository: sbs20/scanservjs
              tag: v3.0.3
            command: /bin/sh
            args: [-c, service dbus start && /entrypoint.sh]
            ports:
              - name: http
                containerPort: 8080
                protocol: TCP
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              # removed because of oom kill when scanning more pages
              # limits:
              #   memory: 250Mi

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-sso@kubernetescrd
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/affinity: "true"
          traefik.ingress.kubernetes.io/router.tls: "true"
          hajimari.io/appName: scanner
          hajimari.io/enable: "true"
          hajimari.io/icon: scanner
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"

    persistence:
      scans:
        enabled: true
        existingClaim: scanservjs-scans
        advancedMounts:
          main:
            main:
              - path: /app/data/output
      dbus:
        enabled: true
        type: hostPath
        hostPath: /var/run/dbus
        advancedMounts:
          main:
            main:
              - path: /var/run/dbus
