---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app anubis-grafana
spec:
  dependsOn:
    - name: grafana
      namespace: observability
  interval: 30m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  # https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
    controllers:
      anubis:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/techarohq/anubis
              tag: v1.15.2@sha256:357258597868022676af5339558c5467e3c67c7708c8c7d363f9b9f52a6bd974
            # envFrom:
            #   - configMapRef:
            #       name: anubis-grafana-env
            env:
              # https://anubis.techaro.lol/docs/admin/installation#environment-variables
              TZ: ${SETTING_TZ}
              BIND: ":8080"
              COOKIE_DOMAIN: techtales.io
              BIND_NETWORK: tcp
              DIFFICULTY: "5"
              METRICS_BIND: ":9090"
              METRICS_BIND_NETWORK: tcp
              SERVE_ROBOTS_TXT: "true"
              TARGET: http://grafana.observability.svc.cluster.local
              OG_PASSTHROUGH: "false"
              OG_EXPIRY_TIME: 24h

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            ports:
              - name: http
                containerPort: &httpPort 8080
              - name: metrics
                containerPort: &metricsPort 9090

            resources:
              requests:
                cpu: 100m
                memory: 128Mi

    service:
      anubis:
        controller: anubis
        type: ClusterIP
        ports:
          http:
            port: *httpPort
            protocol: TCP
          metrics:
            port: *metricsPort
            protocol: TCP

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: anubis
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m

    ingress:
      app:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          # external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com"
          # external-dns/cloudflare: "true"
        hosts:
          - host: &host anubis-grafana.techtales.io
            paths:
              - path: /
                service:
                  identifier: anubis
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
