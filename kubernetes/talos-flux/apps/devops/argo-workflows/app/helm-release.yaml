---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: argo-workflows
spec:
  interval: 15m
  chart:
    spec:
      chart: argo-workflows
      version: 0.28.2
      sourceRef:
        kind: HelmRepository
        name: argo-charts
        namespace: flux-system
      interval: 15m

  values:
    singleNamespace: true

    controller:
      image:
        registry: quay.io
        repository: argoproj/workflow-controller
        tag: v3.4.8
      parallelism: 20
      resourceRateLimit:
        limit: 10
        burst: 1

      namespaceParallelism: 10

    executor:
      image:
        registry: quay.io
        repository: argoproj/argoexec
        tag: v3.4.8

    server:
      enabled: true
      image:
        registry: quay.io
        repository: argoproj/argocli
        tag: v3.5.4@sha256:e31bee57dc4bdad9c69d51a342ba98817037d5f12f5fb6818124e451d80ad9ef

      extraArgs:
        - --auth-mode=server

      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          # traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-sso@kubernetescrd
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/affinity: "true"
          traefik.ingress.kubernetes.io/router.tls: "true"
          # external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com"
          hajimari.io/icon: simple-icons:argo
          hajimari.io/enable: "true"
        hosts:
          - &host argo-workflows.techtales.io
        paths:
          - /

        tls:
          - secretName: argo-workflows-tls
            hosts:
              - *host
