---
# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/vscode-tekton/main/scheme/tekton.dev/v1beta1_Task.json
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: krr
  annotations:
    tekton.dev/pipelines.minVersion: 0.54.0
    tekton.dev/categories: FinOps
    tekton.dev/tags: krr
    tekton.dev/displayName: krr - Kubernetes Resource Report
    tekton.dev/platforms: linux/amd64
spec:
  workspaces:
    - name: output
      description: The krr csv result will be placed here.
  params:
    - name: verbose
      description: Log the commands that are executed during `krr`'s operation.
      type: string
      default: "true"

  steps:
    - name: krr
      image: us-central1-docker.pkg.dev/genuine-flight-317411/devel/krr:v1.8.2@sha256:f1554c93fbc7560aa7a05e66b52ee045504d8b347ea215d7828e25b911d17941
      env:
        - name: PARAM_VERBOSE
          value: $(params.verbose)
        - name: WORKSPACE_OUTPUT_PATH
          value: $(workspaces.output.path)
      script: |
        #!/usr/bin/env sh
        set -eu

        if [ "${PARAM_VERBOSE}" = "true" ] ; then
          set -x
        fi

        python /app/krr.py simple \
          -p http://prometheus-prometheus.observability.svc.cluster.local:9090 \
          --history_duration=720 \
          --cpu_percentile=95 \
          --mem-min=10 \
          --resource=Deployment \
          --resource=StatefulSet \
          --resource=DaemonSet \
          -f csv_export

        cp /app/krr-*.csv $(workspaces.output.path)/

        cat $(workspaces.output.path)/krr-*.csv

# Disable manual taks run, use pipeline instead.
# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/vscode-tekton/main/scheme/tekton.dev/v1beta1_TaskRun.json
# apiVersion: tekton.dev/v1beta1
# kind: TaskRun
# metadata:
#   name: run-krr
# spec:
#   serviceAccountName: tekton-task-krr
#   taskRef:
#     name: krr
#   workspaces:
#     - name: output
#       volumeClaimTemplate:
#         spec:
#           accessModes:
#             - ReadWriteOnce
#           resources:
#             requests:
#               storage: 1Gi
#           storageClassName: nfs-csi
