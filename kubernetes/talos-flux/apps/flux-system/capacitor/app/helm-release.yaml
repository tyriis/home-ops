---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.2/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app capacitor
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controllers:
      capacitor:
        replicas: 1
        pod:
          securityContext:
            fsGroup: 999
            # runAsGroup: 3000
            # runAsNonRoot: true
            # runAsUser: 1000
            # seccompProfile:
            #   type: RuntimeDefault
        containers:
          app:
            env:
              TZ: ${SETTING_TZ}

            image:
              repository: ghcr.io/gimlet-io/capacitor
              tag: v0.4.1@sha256:131c1dbc3b47f4df6a0f3bfaf6addf72e62f29efb84360a11205451f114b9f79
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              readOnlyRootFilesystem: true

            probes:
              startup:
                enabled: false
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 9000
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe

            resources:
              requests:
                cpu: 200m
                memory: 200Mi

    serviceAccount:
      create: false
      name: capacitor

    service:
      app:
        controller: capacitor
        ports:
          http:
            enabled: true
            port: *port
            protocol: HTTP

    ingress:
      app:
        enabled: true
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-sso@kubernetescrd
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/affinity: "true"
          traefik.ingress.kubernetes.io/router.tls: "true"
          hajimari.io/icon: simple-icons:flux
          hajimari.io/enable: "true"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
