---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/monitoring.coreos.com/prometheusrule_v1.json
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: flux-rules
spec:
  groups:
    - name: flux-instance.rules
      rules:
        - alert: FluxInstanceAbsent
          expr: |
            absent(flux_instance_info{exported_namespace="flux-system", name="flux"})
          for: 5m
          annotations:
            summary: >
              Flux instance metric is missing
          labels:
            severity: critical

        - alert: FluxInstanceNotReady
          expr: |
            flux_instance_info{exported_namespace="flux-system", name="flux", ready!="True"}
          for: 5m
          annotations:
            summary: >
              Flux instance {{ $labels.name }} is not ready
          labels:
            severity: critical

        - alert: FluxReconciliationFailure
          annotations:
            summary: Flux reconciliation failed
            description: |
              {{ $labels.kind }} {{ $labels.exported_namespace }}/{{ $labels.name }} reconciliation
              has been failing for more than 15 minutes.
          expr: max(gotk_resource_info{ready="False"} or gotk_resource_info{ready="Unknown"}) by (exported_namespace, customresource_kind, name)
          for: 15m
          labels:
            severity: critical

        - alert: FluxReconciliationSuspended
          annotations:
            summary: Flux reconciliation suspended
            description: |
              {{ $labels.kind }} {{ $labels.exported_namespace }}/{{ $labels.name }} reconciliation
              has been suspended for more than 15 minutes.
          expr: max(gotk_resource_info{suspended="true"}) by (exported_namespace, customresource_kind, name)
          for: 15m
          labels:
            severity: warning
