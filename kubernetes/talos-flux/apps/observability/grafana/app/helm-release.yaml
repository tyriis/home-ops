---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  timeout: 20m
  chart:
    spec:
      chart: grafana
      version: 8.6.4
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  # https://artifacthub.io/packages/helm/grafana/grafana?modal=values
  values:
    replicas: 1

    env:
      TZ: ${SETTING_TZ}
      GF_EXPLORE_ENABLED: "true"
      GF_PANELS_DISABLE_SANITIZE_HTML: "true"
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: "true"
      GF_LOG_LEVEL: info
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_GENERIC_OAUTH_AUTO_LOGIN: "true"
      DS_PROMETHEUS: prometheus

    envFromSecrets:
      - name: grafana-env

    admin:
      existingSecret: grafana-admin
      userKey: USERNAME
      passwordKey: PASSWORD

    grafana.ini:
      server:
        root_url: https://grafana.techtales.io
      users:
        auto_assign_org_role: Admin
      auth.google:
        enabled: true
        allow_sign_up: true
        allowed_domains: techtales.io
        scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
        auth_url: https://accounts.google.com/o/oauth2/auth
        token_url: https://accounts.google.com/o/oauth2/token

    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11074
        "Node Exporter for Prometheus Dashboard":
          gnetId: 11074
          revision: 9
          datasource: Prometheus
        # dragonfly:
        #   url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
        #   datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      # - natel-discrete-panel
      # - pr0ps-trackmap-panel
      - grafana-piechart-panel
      # - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-github-datasource
    serviceMonitor:
      enabled: true

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com"
        external-dns/cloudflare: "true"
        hajimari.io/enable: "true"
        hajimari.io/icon: simple-icons:grafana
        gethomepage.dev/enabled: "true"
        gethomepage.dev/description: Metrics, logs, traces, and profiles, oh my!
        gethomepage.dev/group: Observability
        gethomepage.dev/icon: grafana
        gethomepage.dev/name: Grafana Dashboard
        gethomepage.dev/weight: "10" # optional
      hosts:
        - &host grafana.techtales.io
      path: /
      tls:
        - secretName: grafana-tls
          hosts:
            - *host

    serviceAccount:
      create: true
      autoMount: true

    persistence:
      enabled: false

    createConfigmap: true
    extraConfigmapMounts:
      - name: grafana-contactpoints
        mountPath: /etc/grafana/provisioning/alerting/contactpoints.yaml
        subPath: contactpoints.yaml
        configMap: grafana-contactpoints
        readOnly: true
      - name: grafana-datasources
        mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
        subPath: datasources.yaml
        configMap: grafana-datasources
        readOnly: true
      - name: grafana-policies
        mountPath: /etc/grafana/provisioning/alerting/policies.yaml
        subPath: policies.yaml
        configMap: grafana-policies
        readOnly: true

  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: Deployment
              name: grafana
              namespace: observability
            patch: |
              - op: add
                path: /metadata/annotations/reloader.stakater.com~1auto
                value: "true"
