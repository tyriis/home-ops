---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app i-see-dead-pods
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # https://github.com/bjw-s-labs/helm-charts/blob/main/charts/library/common/values.yaml
    serviceAccount:
      i-see-dead-pods: {}
    controllers:
      cron:
        serviceAccount:
          identifier: *app
        type: cronjob
        cronjob:
          concurrencyPolicy: Forbid
          schedule: "* * * * *"
        pod:
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            runAsNonRoot: true
        containers:
          i-see-dead-pods:
            image:
              repository: alpine/kubectl
              tag: 1.34.1@sha256:08cd1a88988420c4081c545ed5a95d6b1ca633f39e8a153c5316ddf9ea3bc28f
            command:
              - /bin/sh
              - -ec
              - |
                kubectl get pods \
                  --all-namespaces \
                  -o go-template \
                  --template='{{range .items}}{{printf "%s %s %s\n" .metadata.namespace .metadata.name .status.message}}{{end}}' \
                  | grep "Pod was terminated in response to imminent node shutdown." \
                  | awk '{print $1, $2}' \
                  | xargs -r -n2 kubectl delete pod -n || true
            #
            # kubectl get pods \
            #   --all-namespaces \
            #   -o go-template \
            #   --template='{{range .items}}{{printf "%s %s %s\n" .metadata.namespace .metadata.name .status.message}}{{end}}' \
            #   | grep "Pod was rejected: Pod was rejected as the node is shutting down." \
            #   | awk '{print $1, $2}' \
            #   | xargs -r -n2 kubectl delete pod -n || true
            #
            #
            # kubectl get pods \
            #  --all-namespaces \
            #  -o go-template \
            #  --template='{{range .items}}{{printf "%s %s %s\n" .metadata.namespace .metadata.name .status.conditions}}{{end}}' \
            #  | grep "Pod was terminated in response to imminent node shutdown." \
            #  | awk '{print $1, $2}' \
            #  | xargs -r -n2 kubectl delete pod -n
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    rbac:
      roles:
        i-see-dead-pods:
          type: ClusterRole
          rules:
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
                - list
                - delete
      bindings:
        i-see-dead-pods:
          type: ClusterRoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            identifier: *app
          subjects:
            - kind: ServiceAccount
              identifier: *app
              namespace: kube-tools
