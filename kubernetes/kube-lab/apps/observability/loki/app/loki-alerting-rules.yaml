---
groups:
  #
  # SMART Failures
  #
  - name: smart-failure
    rules:
      - alert: SmartFailures
        expr: |
          sum by (hostname) (count_over_time({hostname=~".+"} | json | _SYSTEMD_UNIT = "smartmontools.service" !~ "(?i)previous self-test completed without error" !~ "(?i)Prefailure" |~ "(?i)(error|fail)"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          summary: "SMART has reported failures on host {{ $labels.hostname }}"
  #
  # zigbee2mqtt
  #
  - name: zigbee2mqtt
    rules:
      - alert: ZigbeeUnableToReachMQTT
        expr: |
          sum(count_over_time({app="zigbee2mqtt"} |~ "(?i)not connected to mqtt server"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          summary: "Zigbee2mqtt is unable to reach MQTT"
  #
  # home-assistant
  #
  - name: home-assistant
    rules:
      - alert: HomeAssistantUnableToReachPostgresql
        expr: |
          sum by (app) (count_over_time({app="home-assistant"} |~ "(?i)error in database connectivity"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          summary: "Home Assistant is unable to connect to postgresql"
  #
  # node-red
  #
  - name: node-red
    rules:
      - alert: NodeRedUnableToReachHomeAssistant
        expr: |
          sum by (app) (count_over_time({app="node-red"} |~ "(?i)home assistant.*connecting to undefined"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          summary: "Node-Red is unable to connect to Home Assistant"
      # - alert: NodeRedTest
      #   expr: |
      #     sum(count_over_time({app="node-red"} |~ "(?i)debug:office light"[2m])) > 0
      #   for: 2m
      #   labels:
      #     severity: critical
      #     category: logs
      #   annotations:
      #     summary: "Node-Red is testing"

  - name: postgres-auth-alerts
    rules:
      - alert: PostgresAuthFailure
        expr: |
          count_over_time({app="dbman"} |= "error finalizing: Tokio Postgres Error: db error: FATAL: password authentication failed for user \"postgres\"" [5m]) > 0
        for: 15m
        labels:
          severity: critical
          category: logs
        annotations:
          summary: "Postgres Authentication Failure Detected"
          description: "A password authentication failure occurred for user 'postgres'."
