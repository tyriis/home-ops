---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.15.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack?modal=values
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      route:
        main:
          enabled: true
          hostnames:
            - alertmanager.techtales.io
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https
      alertmanagerSpec:
        alertmanagerConfiguration:
          name: alertmanager
          global:
            resolveTimeout: 5m
        externalUrl: https://alertmanager.techtales.io
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 1Gi

    grafana:
      enabled: false
      forceDeployDashboards: false
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
          multicluster:
            etcd:
              enabled: true

    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels by onedr0p
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 192.168.100.101
        - 192.168.100.102
        - 192.168.100.103

    kubeEtcd:
      enabled: true
      endpoints: *cp

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels by onedr0p
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeProxy:
      enabled: false

    kubeScheduler:
      enabled: true
      endpoints: *cp

    kubeStateMetrics:
      enabled: true

    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      selfMonitor:
        enabled: true
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      extraArgs:
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var)($|/)
        - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs|tmpfs)$
      prometheus:
        monitor:
          enabled: true
          # lens ide config
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: kubernetes_node
            # should be removed when https://github.com/lensapp/lens/issues/4851 is fixed
            - sourceLabels: [__meta_kubernetes_namespace]
              action: replace
              regex: (.*)
              replacement: $1
              targetLabel: kubernetes_namespace
            - sourceLabels: [__meta_kubernetes_service_name]
              action: replace
              regex: (.*)
              replacement: $1
              targetLabel: kubernetes_name
          metricRelabelings:
            # drop useless ms-01 temperature sensors in chip="platform_nct6775_2592", sensor=~"(temp1|temp3|temp4|temp5|temp6|temp8|temp9|temp10|temp11|temp12)"
            - action: drop
              sourceLabels: [chip, sensor]
              regex: platform_nct6775_2592;(temp1|temp3|temp4|temp5|temp6|temp8|temp9|temp10|temp11|temp12)

    prometheusOperator:
      podAnnotations:
        reloader.stakater.com/auto: "true"
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 10m
            memory: 100Mi

    prometheus:
      prometheusSpec:
        enableAdminAPI: true
        enableFeatures:
          - memory-snapshot-on-shutdown
        externalLabels:
          cluster: ${FLUX_CLUSTER_NAME}
        externalUrl: https://prometheus.techtales.io
        image:
          registry: docker.io
          repository: prompp/prompp
          tag: 2.53.2-0.3.4
        podMetadata:
          annotations:
            reloader.stakater.com/auto: "true"
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        resources:
          requests:
            cpu: 100m
            memory: 4Gi
        replicas: 3
        retention: 14d
        retentionSize: 50GB
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        securityContext:
          runAsNonRoot: true
          runAsUser: 64535
          runAsGroup: 64535
          fsGroup: 64535
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 20Gi
      route:
        main:
          enabled: true
          hostnames:
            - prometheus.techtales.io
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https
