---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 9.4.5
      sourceRef:
        kind: HelmRepository
        name: grafana
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # https://artifacthub.io/packages/helm/grafana/grafana?modal=values
  values:
    replicas: 1

    env:
      GF_EXPLORE_ENABLED: "true"
      GF_PANELS_DISABLE_SANITIZE_HTML: "true"
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: "true"
      GF_LOG_LEVEL: info
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_GENERIC_OAUTH_AUTO_LOGIN: "true"
      DS_PROMETHEUS: prometheus

    envFromSecrets:
      - name: grafana-env

    admin:
      existingSecret: grafana-admin
      userKey: USERNAME
      passwordKey: PASSWORD

    grafana.ini:
      server:
        root_url: https://grafana.techtales.io
      users:
        auto_assign_org_role: Admin
      auth.google:
        enabled: true
        allow_sign_up: true
        allowed_domains: techtales.io
        scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
        auth_url: https://accounts.google.com/o/oauth2/auth
        token_url: https://accounts.google.com/o/oauth2/token

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: ceph
            orgId: 1
            folder: Ceph
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: kyverno
            orgId: 1
            folder: Kyverno
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kyverno
          - name: loki
            orgId: 1
            folder: Loki
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: minecraft
            orgId: 1
            folder: Minecraft
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/minecraft
          - name: opnsense
            orgId: 1
            folder: OPNSense
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/opnsense
          - name: unpoller
            disableDeletion: false
            editable: true
            folder: "UniFi Poller"
            options:
              path: /var/lib/grafana/dashboards/unpoller
            orgId: 1
            type: file
          - name: dragonfly
            disableDeletion: false
            editable: true
            folder: Dragonfly
            options:
              path: /var/lib/grafana/dashboards/dragonfly
            orgId: 1
            type: file

    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11074
        node-exporter:
          # renovate: dashboardName="Node Exporter Dashboard EN 20201010-StarsL.cn"
          gnetId: 11074
          revision: 9
          datasource: Prometheus

        # Ref: https://grafana.com/grafana/dashboards/20842
        cert-manager:
          # renovate: dashboardName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus

        # Ref: https://grafana.com/grafana/dashboards/17457
        cloudflared:
          # renovate: dashboardName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        # Ref: https://grafana.com/grafana/dashboards/1860
        node-exporter-full:
          # renovate: dashboardName="Node Exporter Full"
          gnetId: 1860
          revision: 41
          datasource: Prometheus

        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest-exporter:
          # renovate: dashboardName="Speedtest-Exporter"
          gnetId: 13665
          revision: 4
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      storage:
        # Ref: https://grafana.com/grafana/dashboards/22604
        smartctl-exporter:
          # renovate: dashboardName="SMARTctl Exporter"
          gnetId: 22604
          revision: 2
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        # Ref: https://grafana.com/grafana/dashboards/21356
        volsync:
          # removate: dashboardName="VolSync Dashboard"
          gnetId: 21356
          revision: 2
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
            - name: VAR_REPLICATIONDESTNAME
              value: ".*-bootstrap"

      ceph:
        # Ref: https://grafana.com/grafana/dashboards/2842
        ceph-cluster:
          # renovate: dashboardName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336
        ceph-osd:
          # renovate: dashboardName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        ceph-pools:
          # renovate: dashboardName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus

      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus

      kubernetes:
        # Ref: https://grafana.com/grafana/dashboards/15761
        k8s-system-api-server:
          # renovate: dashboardName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/15757
        k8s-views-global:
          # renovate: dashboardName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/15759
        k8s-views-nodes:
          # renovate: dashboardName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 37
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/15758
        k8s-views-namespaces:
          # renovate: dashboardName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/15760
        k8s-views-pods:
          # renovate: dashboardName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11454
        k8s-volumes:
          # renovate: dashboardName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus

      minecraft:
        # Ref: https://grafana.com/grafana/dashboards/14756
        unifiedmetrics:
          # renovate: dashboardName="UnifiedMetrics 0.3.x / Prometheus"
          gnetId: 14756
          revision: 11
          datasource: Prometheus

      loki:
        # Ref: https://grafana.com/grafana/dashboards/13407
        global-metrics:
          # renovate: dashboardName="Loki2.0 Global Metrics"
          gnetId: 13407
          revision: 1
          datasource: Prometheus

      opnsense:
        # Ref: https://grafana.com/grafana/dashboards/21113
        opnsense-exporter:
          # renovate: dashboardName="OPNSense Exporter"
          gnetId: 21113
          revision: 1
          datasource:
            - name: DS_PROMETHEUS-K0
              value: Prometheus

      unpoller:
        unifi-insights:
          # renovate: dashboardName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          # renovate: dashboardName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-usw:
          # renovate: dashboardName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus
        unifi-uap:
          # renovate: dashboardName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus

        dragonfly:
          dragonfly-dashboard:
            # renovate: depName=dragonflydb/dragonfly-operator datasource=github-releases
            url: https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/v1.2.1/monitoring/grafana-dashboard.json
            datasource:
              - name: DS_PROMETHEUS
                value: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-github-datasource
    serviceMonitor:
      enabled: true

    route:
      main:
        enabled: true
        annotations:
          external-dns/cloudflare: "true"
          external-dns/unifi: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Metrics, logs, traces, and profiles, oh my!
          gethomepage.dev/group: Observability
          gethomepage.dev/icon: grafana
          gethomepage.dev/name: Grafana Dashboard
        hostnames:
          - grafana.techtales.io
        parentRefs:
          - name: cilium
            namespace: kube-system
            sectionName: https

    serviceAccount:
      create: true
      autoMount: true

    persistence:
      enabled: false

    createConfigmap: true
    extraConfigmapMounts:
      - name: grafana-contactpoints
        mountPath: /etc/grafana/provisioning/alerting/contactpoints.yaml
        subPath: contactpoints.yaml
        configMap: grafana-contactpoints
        readOnly: true
      - name: grafana-datasources
        mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
        subPath: datasources.yaml
        configMap: grafana-datasources
        readOnly: true
      - name: grafana-policies
        mountPath: /etc/grafana/provisioning/alerting/policies.yaml
        subPath: policies.yaml
        configMap: grafana-policies
        readOnly: true

  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: Deployment
              name: grafana
              namespace: observability
            patch: |
              - op: add
                path: /metadata/annotations/reloader.stakater.com~1auto
                value: "true"
