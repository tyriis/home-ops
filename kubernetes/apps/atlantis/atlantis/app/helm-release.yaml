---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: atlantis
spec:
  interval: 15m
  chart:
    spec:
      chart: atlantis
      version: 4.13.1
      sourceRef:
        kind: HelmRepository
        name: runatlantis-charts
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # https://artifacthub.io/packages/helm/atlantis/atlantis?modal=values
  values:
    atlantisUrl: https://atlantis.${SECRET_DOMAIN}

    orgAllowlist: github.com/${SECRET_GH_ORGANIZATION}/*
    # logLevel: "debug"

    # If managing secrets outside the chart for the webhook, use this variable to reference the secret name
    # vcsSecretName: 'mysecret'

    ## To be used for mounting credential files (when using google provider).
    serviceAccountSecrets:
      # credentials: <json file as base64 encoded string>
      # credentials-staging: <json file as base64 encoded string>

    image:
      repository: ghcr.io/runatlantis/atlantis
      tag: v0.24.3

    ## Use Server Side Repo Config,
    ## ref: https://www.runatlantis.io/docs/server-side-repo-config.html
    ## Example default configuration
    # repoConfig: |
    #  ---
    #  repos:
    #  - id: /.*/
    #    apply_requirements: []
    #    workflow: default
    #    allowed_overrides: []
    #    allow_custom_workflows: false
    #  workflows:
    #    default:
    #      plan:
    #        steps: [init, plan]
    #      apply:
    #        steps: [apply]
    #  # metrics:
    #  #   prometheus:
    #  #     endpoint: /metrics

    # Use Diff Markdown Format for color coding diffs
    enableDiffMarkdownFormat: true

    commonLabels:
      app.kubernetes.io/name: atlantis
      app.kubernetes.io/instance: atlantis

    service:
      type: ClusterIP
      # port: 80
      targetPort: 4141
      # loadBalancerIP: null

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        kubernetes.io/tls-acme: "true"
        traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-sso@kubernetescrd
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/affinity: "true"
        traefik.ingress.kubernetes.io/router.tls: "true"
        # external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com"
        hajimari.io/icon: simple-icons:terraform
        hajimari.io/enable: "true"
      pathType: Prefix
      hosts:
        - host: &host atlantis.${SECRET_DOMAIN}
          paths:
            - /
      tls:
        - secretName: atlantis-tls
          hosts:
            - *host

    resources:
      requests:
        memory: 1Gi
        cpu: 100m
      limits:
        memory: 1Gi
        cpu: 1000m

    volumeClaim:
      enabled: true
      dataStorage: 5Gi
      storageClassName: ceph-block

    environment:
      ATLANTIS_DEFAULT_TF_VERSION: v1.3.8
      ATLANTIS_WRITE_GIT_CREDS: "true"
      # ATLANTIS_GH_APP_KEY_FILE: /config/github.pem

    loadEnvFromSecrets:
      - &secret atlantis-env-secrets

    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true

    servicemonitor:
      # to enable a Prometheus servicemonitor, set enabled to true,
      #   and enable the metrics in this file's repoConfig
      #   by setting a value for metrics.prometheus.endpoint
      enabled: false

    podTemplate:
      annotations:
        secret.reloader.stakater.com/reload: *secret

    readinessProbe:
      periodSeconds: 5
      initialDelaySeconds: 10
