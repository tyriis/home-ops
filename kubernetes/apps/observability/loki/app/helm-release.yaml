---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
spec:
  timeout: 10m
  interval: 30m
  chart:
    spec:
      chart: loki
      version: 5.23.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 30m
  maxHistory: 10
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  # https://grafana.com/docs/loki/latest/configuration/
  # https://artifacthub.io/packages/helm/grafana/loki?modal=values
  # https://github.com/grafana/loki/blob/main/production/helm/loki/values.yaml
  values:
    loki:
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
        memberlist:
          join_members: ["loki-memberlist"]
        limits_config:
          retention_period: 14d
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          max_cache_freshness_per_query: 10m
          split_queries_by_interval: 15m
          ingestion_rate_mb: 16
          ingestion_burst_size_mb: 32
          shard_streams:
            enabled: true

        schema_config:
          configs:
            - from: "2023-01-01"
              store: boltdb-shipper
              object_store: s3
              schema: v12
              index:
                prefix: loki_index_
                period: 24h
        common:
          path_prefix: /var/loki
          replication_factor: 3
          storage:
            s3:
              s3: null
              insecure: false
              sse_encryption: false
              http_config:
                idle_conn_timeout: 90s
                response_header_timeout: 0s
                insecure_skip_verify: true
              s3forcepathstyle: true
          ring:
            kvstore:
              store: memberlist
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://prometheus-alertmanager:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
          ring:
            kvstore:
              store: memberlist
        distributor:
          ring:
            kvstore:
              store: memberlist
        compactor:
          working_directory: /var/loki/boltdb-shipper-compactor
          shared_store: s3
          compaction_interval: 10m
          retention_enabled: true
          retention_delete_delay: 2h
          retention_delete_worker_count: 150
        ingester:
          max_chunk_age: 1h
          lifecycler:
            ring:
              kvstore:
                store: memberlist
        analytics:
          reporting_enabled: false
      podAnnotations:
        secret.reloader.stakater.com/reload: loki-s3
    gateway:
      enabled: true
      replicas: 3
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.gatewaySelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      ingress:
        # use dedicated ingress definition
        enabled: false

    write:
      replicas: 3
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.writeSelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      persistence:
        size: 15Gi
        storageClass: ceph-block

    read:
      replicas: 3
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.readSelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      extraVolumeMounts:
        - name: loki-rules
          mountPath: /rules/fake
        - name: loki-rules-tmp
          mountPath: /tmp/scratch
        - name: loki-tmp
          mountPath: /tmp/loki-tmp
      extraVolumes:
        - name: loki-rules
          configMap:
            name: loki-alerting-rules
        - name: loki-rules-tmp
          emptyDir: {}
        - name: loki-tmp
          emptyDir: {}
      persistence:
        size: 15Gi
        storageClass: ceph-block

    backend:
      replicas: 3
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.backendSelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      extraVolumeMounts:
        - name: loki-rules
          mountPath: /rules/fake
        - name: loki-rules-tmp
          mountPath: /tmp/scratch
        - name: loki-tmp
          mountPath: /tmp/loki-tmp
      extraVolumes:
        - name: loki-rules
          configMap:
            name: loki-alerting-rules
        - name: loki-rules-tmp
          emptyDir: {}
        - name: loki-tmp
          emptyDir: {}
      persistence:
        size: 15Gi
        storageClass: ceph-block

    #   selfMonitoring:
    #     enabled: false
    #     grafanaAgent:
    #       installOperator: false
    #     lokiCanary:
    #       enabled: false
    test:
      enabled: false
    monitoring:
      dashboards:
        annotations:
          kustomize.toolkit.fluxcd.io/substitute: disabled
        labels:
          grafana_dashboard: "true"
      serviceMonitor:
        enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
      lokiCanary:
        enabled: false

  valuesFrom:
    - kind: Secret
      name: loki-s3
      valuesKey: S3_BUCKET_NAME
      targetPath: loki.structuredConfig.common.storage.s3.bucketnames
    - kind: Secret
      name: loki-s3
      valuesKey: S3_BUCKET_HOST
      targetPath: loki.structuredConfig.common.storage.s3.endpoint
    - kind: Secret
      name: loki-s3
      valuesKey: S3_ACCESS_KEY
      targetPath: loki.structuredConfig.common.storage.s3.access_key_id
    - kind: Secret
      name: loki-s3
      valuesKey: S3_SECRET_KEY
      targetPath: loki.structuredConfig.common.storage.s3.secret_access_key
