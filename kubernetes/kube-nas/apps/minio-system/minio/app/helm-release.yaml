---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 30m
  timeout: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-07-31T05-46-26Z@sha256:9eea83a4e1425067e7b768397756efad19d36fc1c710808b8e1072236e8806c7
            env:
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.tyriis.dev,https://s3.tyriis.dev
              MINIO_BROWSER_REDIRECT_URL: https://minio.tyriis.dev
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_URL: https://prometheus.techtales.io
              MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_SERVER_URL: https://s3.tyriis.dev
              MINIO_STORAGE_CLASS_RRS: EC:0
              MINIO_STORAGE_CLASS_STANDARD: EC:0
              MINIO_UPDATE: "off"
            envFrom:
              - secretRef:
                  name: minio-env
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: minio
        ports:
          http:
            port: 9001
          s3:
            port: 9000
    # serviceMonitor:
    #   app:
    #     serviceName: minio
    #     endpoints:
    #       - port: s3
    #         scheme: http
    #         path: /minio/v2/metrics/cluster
    #         interval: 1m
    #         scrapeTimeout: 10s
    ingress:
      app:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        className: nginx
        hosts:
          - host: &host1 "{{ .Release.Name }}.tyriis.dev"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &host2 s3.tyriis.dev
            paths:
              - path: /
                service:
                  identifier: app
                  port: s3
        tls:
          - hosts:
              - *host1
              - *host2
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      data:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: openebs-hostpath
        advancedMounts:
          minio:
            app:
              - path: /data
