---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  # https://github.com/bjw-s-labs/helm-charts/blob/main/charts/library/common/values.yaml
  #  Movie Library Manager: https://docs.linuxserver.io/images/docker-sonarr
  values:
    controllers:
      sonarr:
        replicas: 1
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              # https://wiki.servarr.com/useful-tools#using-environment-variables-for-config
              TZ: ${SETTING_TZ}
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: Forms
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__ANALYTICSENABLED: "False"
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 8989
              SONARR__UPDATE__BRANCH: develop
            ports:
              - name: http
                containerPort: *port
                protocol: TCP
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          cert-manager.io/cluster-issuer: "self-signed"
        hosts:
          - host: &host "{{ .Release.Name }}.flux.local"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      config:
        type: hostPath
        hostPath: /media/sonarr
        globalMounts:
          - path: /config
      media:
        type: hostPath
        hostPath: /media/files
        globalMounts:
          - path: /media/files
