---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app vaultwarden
  namespace: secops
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    global:
      nameOverride: *app
    image:
      repository: vaultwarden/server
      tag: 1.27.0-alpine
    env:
      DATA_FOLDER: "config"
      TZ: ${SETTING_TZ}
      SIGNUPS_ALLOWED: "false"
      WEBSOCKET_ENABLED: true
      WEBSOCKET_ADDRESS: 0.0.0.0
      WEBSOCKET_PORT: 3012
      DOMAIN: https://vaultwarden.${SECRET_DOMAIN}
      DATABASE_URL: ${SECRET_VAULTWARDEN_DATABASE_URL}
      ADMIN_TOKEN: ${SECRET_VAULTWARDEN_ADMIN_TOKEN}
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/icon: shield-key
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
          - host: &host vaultwarden.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
              - path: /notifications/hub/negotiate
                pathType: Prefix
              - path: /notifications/hub
                pathType: Prefix
                servicePort: 3012
        tls:
          - hosts:
              - *host
            secretName: &tls vaultwarden-tls
      admin:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
          - host: *host
            paths:
              - path: /admin
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: *tls
    persistence:
      config:
        enabled: true
        existingClaim: vaultwarden-config
        mountPath: /data

    service:
      main:
        ports:
          http:
            port: 80
          websocket:
            enabled: true
            port: 3012
            protocol: TCP
    initContainers:
      wait-database:
        image: busybox:1.36.0
        imagePullPolicy: IfNotPresent
        command:
          - sh
        args:
          - -c
          - >-
            until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
            do echo "Waiting for database";
            done
        env:
          - name: POSTGRES_HOST
            value: pgo-cluster-primary
        envFrom:
          - secretRef:
              name: vaultwarden-secret
    resources:
      requests:
        cpu: 15m
        memory: 145Mi
      limits:
        memory: 155Mi
    envFrom:
      - secretRef:
          name: vaultwarden-secret
    # env:
    #   DATABASE_URL:
    #     valueFrom:
    #       secretKeyRef:
    #         name: pgo-cluster-pguser-vaultwarden
    #         key: uri
